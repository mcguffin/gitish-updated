<?php

/*
Plugin Name: Gitish Updated
Plugin URI: http://wordpress.org/
Description: Enter description here.
Author: Jörn Lund
Version: 0.1.0
Author URI: https://github.com/mcguffin
License: GPL3
Text Domain: gitish-updated
Domain Path: /languages/
Update URI: https://github.com/mcguffin/gitish-updated/raw/master/.wp-release-info.json
*/

/*  Copyright 2018 Jörn Lund

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2, as
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

/*
Plugin was generated by WP Plugin Scaffold
https://github.com/mcguffin/wp-plugin-scaffold
Command line args were: ``
*/


namespace GitishUpdated;

if ( ! defined('ABSPATH') ) {
	die('FU!');
}


require_once plugin_dir_path(__FILE__) . 'include/autoload.php';

Core\Core::instance( __FILE__ );


add_filter( 'update_plugins_github.com', function( $update, $plugin_data, $plugin_file, $locales ) {

	if ( ! preg_match( "@{$plugin_file}$@", __FILE__ ) ) { // not our plugin
		return $update;
	}

	$response = wp_remote_get( $plugin_data['UpdateURI'] );

	if ( is_wp_error( $response ) || wp_remote_retrieve_response_code( $response ) > 200 ) { // response error
		return $update;
	}

	return json_decode( wp_remote_retrieve_body( $response ), true, 512 );
}, 10, 4 );





if ( is_admin() || defined( 'DOING_AJAX' ) ) {

	// don't WP-Update actual repos!
	if ( ! file_exists( plugin_dir_path(__FILE__) . '/.git/' ) ) {

		// not a git. Check if https://github.com/afragen/github-updater is active. (function is_plugin_active not available yet)
		$active_plugins = get_option('active_plugins');
		if ( $sitewide_plugins = get_site_option('active_sitewide_plugins') ) {
			$active_plugins = array_merge( $active_plugins, array_keys( $sitewide_plugins ) );
		}

		if ( ! in_array( 'github-updater/github-updater.php', $active_plugins ) ) {
			// not github updater. Init our our own...
			// AutoUpdate\AutoUpdateGithub::instance();
		}
	}





}
